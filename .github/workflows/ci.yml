# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: 3.11  # Ajuste para a versão usada no backend

jobs:
  lint:
    name: 🧹 Lint Code (Black + Flake8)
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Clear pip cache  # <--- ADICIONE ESTA LINHA
        run: pip cache purge

      - name: 📚 Install Lint Dependencies
        run: |
          pip install --upgrade pip
          pip install black flake8

      - name: 🧽 Run Black (Code Formatter)
        run: |
          black --check backend

      - name: 🔎 Run Flake8 (Linter)
        run: |
          flake8 backend --extend-ignore=E203,W503

  test:
    name: 🧪 Run Backend Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📚 Install Test Dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install pytest

      - name: 🔍 Run Tests
        run: |
          cd backend/app
          PYTHONPATH=../ DATABASE_URL=sqlite:///./test.db pytest --maxfail=1 --disable-warnings -q

  build_and_push_backend:
    name: 🐳 Build and Push Backend Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔐 Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🛠️ Build Backend Docker Image
        run: |
          DOCKER_BUILDKIT=0 docker build --no-cache --pull -t ${{ secrets.DOCKERHUB_USERNAME }}/m00-backend:latest -f backend/Dockerfile backend

      - name: ⬆️ Push Backend Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/m00-backend:latest

  build_and_push_dashboard:
    name: 🐳 Build and Push Dashboard Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔐 Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🛠️ Build Dashboard Docker Image
        run: |
          DOCKER_BUILDKIT=0 docker build --no-cache --pull -t ${{ secrets.DOCKERHUB_USERNAME }}/m00-dashboard:latest -f dashboard/Dockerfile dashboard

      - name: ⬆️ Push Dashboard Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/m00-dashboard:latest

  deploy_backend:
    name: 🚀 Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: build_and_push_backend
    steps:
      - name: 🛰️ Trigger Render Deploy (Backend)
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d0qkdjbe5dus739kvp20?key=CGwCAHg5hgE"

  deploy_dashboard:
    name: 🚀 Deploy Dashboard to Render
    runs-on: ubuntu-latest
    needs: build_and_push_dashboard
    steps:
      - name: 🛰️ Trigger Render Deploy (Dashboard)
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d0qkdnje5dus739kvtog?key=vNLK9-uZw0U"
