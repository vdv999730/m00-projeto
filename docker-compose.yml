services:

  db:
    image: postgres:15
    container_name: m00-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: m00_user
      POSTGRES_PASSWORD: m00_password
      POSTGRES_DB: m00_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - m00-network

backend:
  build:
    context: ./m00-projeto/backend
  container_name: m00-backend
  restart: unless-stopped
  ports:
    - "10000:10000"
  environment:
    PYTHONPATH: /app
    DATABASE_URL: postgres://m00_user:m00_password@db:5432/m00_db
    SECRET_KEY: sua_chave_secreta_aqui
    ALGORITHM: HS256
  depends_on:
    - db
  networks:
    - m00-network
  command: uvicorn app.main:app --host 0.0.0.0 --port 10000 --reload
    #command: uvicorn main:app --host 0.0.0.0 --port 10000 --reload
    #command: ["bash"]
    #command: uvicorn main:app --host 0.0.0.0 --port 10000 --reload
    #2command: uvicorn main:app --host 0.0.0.0 --port 10000 --reload
    #3command: uvicorn app.main:app --host 0.0.0.0 --port 10000 --reload
    #4command: uvicorn main:app --host 0.0.0.0 --port 10000 --reload
    #command: uvicorn main:app --host 0.0.0.0 --port 10000 --reload

  dashboard:
    build:
      context: ./m00-projeto/dashboard
      dockerfile: Dockerfile
    container_name: m00-dashboard
    restart: unless-stopped
    ports:
      - "8501:8501"
    networks:
      - m00-network
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    #uvicorn app.main:app --host 0.0.0.0 --port 10000 --reload

volumes:
  postgres_data:

networks:
  m00-network:
    driver: bridge
